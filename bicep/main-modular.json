{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "9511393904340081228"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "staging",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, staging, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "projectName": {
      "type": "string",
      "defaultValue": "databricks-workshop",
      "minLength": 3,
      "maxLength": 20,
      "metadata": {
        "description": "Name of the project for resource naming"
      }
    },
    "owner": {
      "type": "string",
      "defaultValue": "workshop-participant",
      "metadata": {
        "description": "Owner of the resources for tagging purposes"
      }
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "workshop",
      "metadata": {
        "description": "Cost center for billing and resource tracking"
      }
    },
    "databricksSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "standard",
        "premium",
        "trial"
      ],
      "metadata": {
        "description": "SKU for Azure Databricks workspace"
      }
    },
    "noPublicIp": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable no public IP for Databricks workspace"
      }
    },
    "storageAccountTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Storage account tier"
      }
    },
    "storageReplicationType": {
      "type": "string",
      "defaultValue": "LRS",
      "allowedValues": [
        "LRS",
        "GRS",
        "RAGRS",
        "ZRS"
      ],
      "metadata": {
        "description": "Storage replication type"
      }
    },
    "logRetentionDays": {
      "type": "int",
      "defaultValue": 30,
      "minValue": 30,
      "maxValue": 730,
      "metadata": {
        "description": "Log Analytics workspace retention in days"
      }
    },
    "keyVaultSku": {
      "type": "string",
      "defaultValue": "standard",
      "allowedValues": [
        "standard",
        "premium"
      ],
      "metadata": {
        "description": "Key Vault SKU"
      }
    },
    "deploymentTime": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd')]",
      "metadata": {
        "description": "Deployment timestamp for tagging"
      }
    }
  },
  "variables": {
    "resourcePrefix": "[format('{0}-{1}', parameters('environment'), parameters('projectName'))]",
    "commonTags": {
      "Environment": "[parameters('environment')]",
      "Project": "[parameters('projectName')]",
      "Owner": "[parameters('owner')]",
      "CostCenter": "[parameters('costCenter')]",
      "DeployedBy": "Bicep",
      "DeploymentTime": "[parameters('deploymentTime')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "networking-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "vnetAddressPrefix": {
            "value": "10.0.0.0/16"
          },
          "publicSubnetPrefix": {
            "value": "10.0.1.0/24"
          },
          "privateSubnetPrefix": {
            "value": "10.0.2.0/24"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "8045881072442195176"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "metadata": {
                "description": "Resource prefix for naming"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "vnetAddressPrefix": {
              "type": "string",
              "defaultValue": "10.0.0.0/16",
              "metadata": {
                "description": "Virtual network address space"
              }
            },
            "publicSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.1.0/24",
              "metadata": {
                "description": "Public subnet address prefix"
              }
            },
            "privateSubnetPrefix": {
              "type": "string",
              "defaultValue": "10.0.2.0/24",
              "metadata": {
                "description": "Private subnet address prefix"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Resource tags"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}-vnet', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetAddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "public-subnet",
                    "properties": {
                      "addressPrefix": "[parameters('publicSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-public', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "databricks-delegation-public",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "private-subnet",
                    "properties": {
                      "addressPrefix": "[parameters('privateSubnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-private', parameters('prefix')))]"
                      },
                      "delegations": [
                        {
                          "name": "databricks-delegation-private",
                          "properties": {
                            "serviceName": "Microsoft.Databricks/workspaces"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-private', parameters('prefix')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-public', parameters('prefix')))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}-nsg-public', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": []
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-11-01",
              "name": "[format('{0}-nsg-private', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": []
              }
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "Virtual network resource ID"
              },
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix')))]"
            },
            "vnetName": {
              "type": "string",
              "metadata": {
                "description": "Virtual network name"
              },
              "value": "[format('{0}-vnet', parameters('prefix'))]"
            },
            "publicSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Public subnet resource ID"
              },
              "value": "[format('{0}/subnets/public-subnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix'))))]"
            },
            "privateSubnetId": {
              "type": "string",
              "metadata": {
                "description": "Private subnet resource ID"
              },
              "value": "[format('{0}/subnets/private-subnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('prefix'))))]"
            },
            "publicSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Public subnet name"
              },
              "value": "public-subnet"
            },
            "privateSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Private subnet name"
              },
              "value": "private-subnet"
            },
            "publicNsgId": {
              "type": "string",
              "metadata": {
                "description": "Public NSG resource ID"
              },
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-public', parameters('prefix')))]"
            },
            "privateNsgId": {
              "type": "string",
              "metadata": {
                "description": "Private NSG resource ID"
              },
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-nsg-private', parameters('prefix')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "security-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "logRetentionDays": {
            "value": "[parameters('logRetentionDays')]"
          },
          "keyVaultSku": {
            "value": "[parameters('keyVaultSku')]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "12335310670810934166"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "metadata": {
                "description": "Resource prefix for naming"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "logRetentionDays": {
              "type": "int",
              "defaultValue": 30,
              "minValue": 30,
              "maxValue": 730,
              "metadata": {
                "description": "Log Analytics workspace retention in days"
              }
            },
            "keyVaultSku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium"
              ],
              "metadata": {
                "description": "Key Vault SKU"
              }
            },
            "environment": {
              "type": "string",
              "metadata": {
                "description": "Environment name for access policies"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Resource tags"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2023-09-01",
              "name": "[format('{0}-law', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "sku": {
                  "name": "PerGB2018"
                },
                "retentionInDays": "[parameters('logRetentionDays')]",
                "features": {
                  "enableLogAccessUsingOnlyResourcePermissions": true
                }
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-07-01",
              "name": "[take(format('{0}-kv-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24)]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": true,
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "[parameters('keyVaultSku')]",
                  "family": "A"
                },
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enablePurgeProtection": "[if(equals(parameters('environment'), 'prod'), true(), false())]",
                "networkAcls": {
                  "defaultAction": "Allow",
                  "bypass": "AzureServices"
                },
                "accessPolicies": []
              }
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace resource ID"
              },
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-law', parameters('prefix')))]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Log Analytics workspace name"
              },
              "value": "[format('{0}-law', parameters('prefix'))]"
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID"
              },
              "value": "[resourceId('Microsoft.KeyVault/vaults', take(format('{0}-kv-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24))]"
            },
            "keyVaultName": {
              "type": "string",
              "metadata": {
                "description": "Key Vault name"
              },
              "value": "[take(format('{0}-kv-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24)]"
            },
            "keyVaultUri": {
              "type": "string",
              "metadata": {
                "description": "Key Vault URI"
              },
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', take(format('{0}-kv-{1}', parameters('prefix'), uniqueString(resourceGroup().id)), 24)), '2023-07-01').vaultUri]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "storage-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "storageAccountTier": {
            "value": "[parameters('storageAccountTier')]"
          },
          "storageReplicationType": {
            "value": "[parameters('storageReplicationType')]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'security-deployment'), '2025-04-01').outputs.keyVaultId.value]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "13866324166244483561"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "metadata": {
                "description": "Resource prefix for naming"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "storageAccountTier": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Storage account tier"
              }
            },
            "storageReplicationType": {
              "type": "string",
              "defaultValue": "LRS",
              "allowedValues": [
                "LRS",
                "GRS",
                "RAGRS",
                "ZRS"
              ],
              "metadata": {
                "description": "Storage replication type"
              }
            },
            "keyVaultId": {
              "type": "string",
              "metadata": {
                "description": "Key Vault resource ID for secrets"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Resource tags"
              }
            }
          },
          "variables": {
            "storageAccountNameBase": "[replace(parameters('prefix'), '-', '')]",
            "storageAccountName": "[take(format('{0}sa{1}', variables('storageAccountNameBase'), uniqueString(resourceGroup().id)), 24)]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-05-01",
              "name": "[if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[format('{0}_{1}', parameters('storageAccountTier'), parameters('storageReplicationType'))]"
              },
              "kind": "StorageV2",
              "properties": {
                "isHnsEnabled": true,
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]",
              "properties": {
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "containerDeleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                },
                "changeFeed": {
                  "enabled": true,
                  "retentionInDays": 7
                },
                "isVersioningEnabled": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default', 'raw-data')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}/{2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default', 'processed-data')]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2023-07-01",
              "name": "[format('{0}/storage-connection-string', last(split(parameters('keyVaultId'), '/')))]",
              "properties": {
                "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), listKeys(resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))), '2023-05-01').keys[0].value, environment().suffixes.storage)]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "metadata": {
                "description": "Storage account resource ID"
              },
              "value": "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
            },
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Storage account name"
              },
              "value": "[if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))]"
            },
            "storageAccountPrimaryEndpoint": {
              "type": "string",
              "metadata": {
                "description": "Storage account primary endpoint"
              },
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))), '2023-05-01').primaryEndpoints.blob]"
            },
            "rawDataContainerName": {
              "type": "string",
              "metadata": {
                "description": "Raw data container name"
              },
              "value": "raw-data"
            },
            "processedDataContainerName": {
              "type": "string",
              "metadata": {
                "description": "Processed data container name"
              },
              "value": "processed-data"
            },
            "storageConnectionStringSecretName": {
              "type": "string",
              "metadata": {
                "description": "Storage connection string secret name"
              },
              "value": "[format('{0}/storage-connection-string', last(split(parameters('keyVaultId'), '/')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'security-deployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2025-04-01",
      "name": "databricks-deployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "prefix": {
            "value": "[variables('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "databricksSku": {
            "value": "[parameters('databricksSku')]"
          },
          "noPublicIp": {
            "value": "[parameters('noPublicIp')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2025-04-01').outputs.vnetId.value]"
          },
          "publicSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2025-04-01').outputs.publicSubnetName.value]"
          },
          "privateSubnetName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2025-04-01').outputs.privateSubnetName.value]"
          },
          "tags": {
            "value": "[variables('commonTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.38.33.27573",
              "templateHash": "10774406269493133602"
            }
          },
          "parameters": {
            "prefix": {
              "type": "string",
              "metadata": {
                "description": "Resource prefix for naming"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure region for resources"
              }
            },
            "databricksSku": {
              "type": "string",
              "defaultValue": "standard",
              "allowedValues": [
                "standard",
                "premium",
                "trial"
              ],
              "metadata": {
                "description": "SKU for Azure Databricks workspace"
              }
            },
            "noPublicIp": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable no public IP for Databricks workspace"
              }
            },
            "vnetId": {
              "type": "string",
              "metadata": {
                "description": "Virtual network resource ID"
              }
            },
            "publicSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Public subnet name"
              }
            },
            "privateSubnetName": {
              "type": "string",
              "metadata": {
                "description": "Private subnet name"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Resource tags"
              }
            }
          },
          "variables": {
            "managedResourceGroupName": "[format('{0}-databricks-managed-rg', parameters('prefix'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Databricks/workspaces",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}-databricks', parameters('prefix'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('databricksSku')]"
              },
              "properties": {
                "managedResourceGroupId": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('managedResourceGroupName'))]",
                "parameters": "[if(not(empty(parameters('vnetId'))), createObject('customVirtualNetworkId', createObject('value', parameters('vnetId')), 'customPublicSubnetName', createObject('value', parameters('publicSubnetName')), 'customPrivateSubnetName', createObject('value', parameters('privateSubnetName')), 'enableNoPublicIp', createObject('value', parameters('noPublicIp'))), createObject())]",
                "publicNetworkAccess": "Enabled",
                "requiredNsgRules": "AllRules"
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Databricks workspace resource ID"
              },
              "value": "[resourceId('Microsoft.Databricks/workspaces', format('{0}-databricks', parameters('prefix')))]"
            },
            "workspaceName": {
              "type": "string",
              "metadata": {
                "description": "Databricks workspace name"
              },
              "value": "[format('{0}-databricks', parameters('prefix'))]"
            },
            "workspaceUrl": {
              "type": "string",
              "metadata": {
                "description": "Databricks workspace URL"
              },
              "value": "[reference(resourceId('Microsoft.Databricks/workspaces', format('{0}-databricks', parameters('prefix'))), '2024-05-01').workspaceUrl]"
            },
            "managedResourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "Managed resource group name"
              },
              "value": "[variables('managedResourceGroupName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'networking-deployment')]"
      ]
    }
  ],
  "outputs": {
    "databricksWorkspaceUrl": {
      "type": "string",
      "metadata": {
        "description": "URL of the Databricks workspace"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricks-deployment'), '2025-04-01').outputs.workspaceUrl.value]"
    },
    "databricksWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "ID of the Databricks workspace"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'databricks-deployment'), '2025-04-01').outputs.workspaceId.value]"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2025-04-01').outputs.storageAccountName.value]"
    },
    "storageAccountPrimaryEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Primary blob endpoint of the storage account"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2025-04-01').outputs.storageAccountPrimaryEndpoint.value]"
    },
    "storageContainers": {
      "type": "object",
      "metadata": {
        "description": "Names of the storage containers"
      },
      "value": {
        "raw": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2025-04-01').outputs.rawDataContainerName.value]",
        "processed": "[reference(resourceId('Microsoft.Resources/deployments', 'storage-deployment'), '2025-04-01').outputs.processedDataContainerName.value]"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'security-deployment'), '2025-04-01').outputs.keyVaultName.value]"
    },
    "keyVaultUri": {
      "type": "string",
      "metadata": {
        "description": "URI of the Key Vault"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'security-deployment'), '2025-04-01').outputs.keyVaultUri.value]"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2025-04-01').outputs.vnetName.value]"
    },
    "virtualNetworkId": {
      "type": "string",
      "metadata": {
        "description": "ID of the virtual network"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networking-deployment'), '2025-04-01').outputs.vnetId.value]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Log Analytics workspace"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'security-deployment'), '2025-04-01').outputs.logAnalyticsWorkspaceName.value]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "metadata": {
        "description": "ID of the Log Analytics workspace"
      },
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'security-deployment'), '2025-04-01').outputs.logAnalyticsWorkspaceId.value]"
    },
    "commonTags": {
      "type": "object",
      "metadata": {
        "description": "Common resource tags"
      },
      "value": "[variables('commonTags')]"
    }
  }
}