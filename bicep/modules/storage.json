{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "13866324166244483561"
    }
  },
  "parameters": {
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Resource prefix for naming"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for resources"
      }
    },
    "storageAccountTier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Storage account tier"
      }
    },
    "storageReplicationType": {
      "type": "string",
      "defaultValue": "LRS",
      "allowedValues": [
        "LRS",
        "GRS",
        "RAGRS",
        "ZRS"
      ],
      "metadata": {
        "description": "Storage replication type"
      }
    },
    "keyVaultId": {
      "type": "string",
      "metadata": {
        "description": "Key Vault resource ID for secrets"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Resource tags"
      }
    }
  },
  "variables": {
    "storageAccountNameBase": "[replace(parameters('prefix'), '-', '')]",
    "storageAccountName": "[take(format('{0}sa{1}', variables('storageAccountNameBase'), uniqueString(resourceGroup().id)), 24)]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[format('{0}_{1}', parameters('storageAccountTier'), parameters('storageReplicationType'))]"
      },
      "kind": "StorageV2",
      "properties": {
        "isHnsEnabled": true,
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "changeFeed": {
          "enabled": true,
          "retentionInDays": 7
        },
        "isVersioningEnabled": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default', 'raw-data')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default', 'processed-data')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), 'default')]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/storage-connection-string', last(split(parameters('keyVaultId'), '/')))]",
      "properties": {
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))), listKeys(resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))), '2023-05-01').keys[0].value, environment().suffixes.storage)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountId": {
      "type": "string",
      "metadata": {
        "description": "Storage account resource ID"
      },
      "value": "[resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id))))]"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name"
      },
      "value": "[if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))]"
    },
    "storageAccountPrimaryEndpoint": {
      "type": "string",
      "metadata": {
        "description": "Storage account primary endpoint"
      },
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', if(greaterOrEquals(length(variables('storageAccountName')), 3), variables('storageAccountName'), format('dataworkshop{0}', uniqueString(resourceGroup().id)))), '2023-05-01').primaryEndpoints.blob]"
    },
    "rawDataContainerName": {
      "type": "string",
      "metadata": {
        "description": "Raw data container name"
      },
      "value": "raw-data"
    },
    "processedDataContainerName": {
      "type": "string",
      "metadata": {
        "description": "Processed data container name"
      },
      "value": "processed-data"
    },
    "storageConnectionStringSecretName": {
      "type": "string",
      "metadata": {
        "description": "Storage connection string secret name"
      },
      "value": "[format('{0}/storage-connection-string', last(split(parameters('keyVaultId'), '/')))]"
    }
  }
}